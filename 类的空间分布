1 类占用至少一个字节的内存空间
2 成员函数不占用类的空间
3 成员对象占用类对象的内存空间


1 静态成员不计算在类对象sizeof长度之内
2 普通成员函数和静态成员函数不计算在类对象的sizeof之内
3 虚函数不计算在类对象sizeof之内 但是虚函数会让类对象的sizeof增加一个指向虚函数表的指针
4 虚函数表 vtbl 是基于类的 跟着类走,跟对象没关系,不是基于对象的    虚函数在编译期间就已经存在了这个函数指针,由这些虚函数指针组成了虚函数表
5 如果有多个数据成员,那么为了提高访问速度,某些编译器可能会将数据成员之间的内存占用比例进行调整, 俗称  内存对齐     都是以最大成员变量长度来作对齐基本单位
6 不管什么类型的指针,指针占用的大小是一致的    32位是4  64位是8字节


虚函数表的原有,是因为虚函数表的多态 会导致子类对父类的覆盖
